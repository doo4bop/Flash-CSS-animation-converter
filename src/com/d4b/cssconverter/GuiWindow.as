package com.d4b.cssconverter{	import flash.display.NativeWindow;	import flash.display.NativeWindowInitOptions;	import flash.display.NativeWindowType;	import flash.display.NativeWindowType;	import flash.display.NativeWindowSystemChrome;	import flash.desktop.NativeApplication;	import flash.display.StageAlign;	import flash.events.Event;	import flash.filesystem.*;	import com.d4b.cssconverter.Gui;	public class GuiWindow extends NativeWindow	{				var guiConsole:Gui = new Gui();						public function GuiWindow()		{				var guiWindowOptions:NativeWindowInitOptions = new NativeWindowInitOptions();			guiWindowOptions.type = NativeWindowType.NORMAL;			guiWindowOptions.minimizable = false;			guiWindowOptions.resizable = false;			guiWindowOptions.maximizable = false;			guiWindowOptions.systemChrome = NativeWindowSystemChrome.STANDARD;			guiWindowOptions.transparent = false;						super(guiWindowOptions);						this.stage.align = StageAlign.TOP_LEFT;			this.stage.scaleMode = "noScale";			this.width = guiConsole.width;			this.height = guiConsole.height + 20;			this.x = 100;			this.y = 100;			this.stage.addChild(guiConsole);			this.alwaysInFront = true;			this.activate();			this.addEventListener(Event.CLOSING, closeApplication, false, 0, true); 									guiConsole.addEventListener( Gui.BATCH_CLICKED, saveBundle);		}				public function createDestinationFolder()		{			var file:File = File.documentsDirectory;			file = file.resolvePath( Config.PATH);			if (! file.isDirectory)			{				file.createDirectory();			}		}				public function saveBundle( e:Event = null)		{			if (!!Config.log)			{				Config.log(':: CONVERTER :: Started');			}						this.dispatchEvent( new Event (Gui.BATCH_CLICKED) );		}				private function closeApplication (e:Event){			NativeApplication.nativeApplication.exit();		}							}}