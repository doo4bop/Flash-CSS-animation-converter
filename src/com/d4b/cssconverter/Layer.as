package com.d4b.cssconverter{	import flash.display.MovieClip;	import flash.display.BitmapData;	import flash.utils.ByteArray;	import flash.filesystem.FileStream;	import flash.filesystem.File;	import flash.filesystem.FileMode;	import com.adobe.images.JPGEncoder;	import com.adobe.images.PNGEncoder;	import flash.display.DisplayObject;	public class Layer extends MovieClip	{		public static const PNG:String = '.png';		public static const JPG:String = '.jpg'				public var fileName	:String;		public var fileType	:String;		public var fileURI	:String;		public var imgSource:BitmapData;		public var hasAlphaPixels:Boolean = false;		public var jpgQuality:Number = 80;				public var imageData:Object = {};		public var imagemarkup:String;		public var element:DisplayObject;				public function Layer( mc:DisplayObject)			{			element = mc;			fileName = element.parent.name + '_' + element.name;			imageData.classname = fileName;			fileType = PNG;		}		public function saveImage()		{			fileURI =  Templates.path + '/img/' + fileName + fileType;			imageData.source = 'img/' + fileName + fileType;						var imageEncoder;						switch (fileType){								case PNG:					imageEncoder = PNGEncoder.encode;				break;								case JPG:					var jpbEncoder :JPGEncoder = new JPGEncoder( jpgQuality );					imageEncoder = jpbEncoder.encode;				break;			}						imgSource = new BitmapData(element.width,element.height, true, 0x00000000);			imgSource.draw(element);						var ba:ByteArray = imageEncoder(imgSource);									var file:File = File.documentsDirectory;			file = file.resolvePath(fileURI);						var fileStream:FileStream = new FileStream();			fileStream.open(file, FileMode.WRITE);			fileStream.writeBytes(ba);			fileStream.close();					imagemarkup = Templates.populate( Templates.image, imageData);					}	}}